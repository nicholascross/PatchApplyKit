# TODO

## Binary patch support
- Parse git binary patch sections (`literal` / `delta` blocks) and apply them to targets using base64 decoding.
- Add fallback strategy (e.g. copy source file verbatim) when binary data is unavailable but metadata indicates rename/copy.
- Extend `PatchFileSystem` with streaming write APIs for large binary payloads; update applicator accordingly.

## Mode and permission enhancements
- Capture and apply `index ...` optional mode tokens for existing files when no content change occurs.
- Support Windows-style attributes or ACL metadata (future cross-platform consideration).

## Matching robustness
- Implement configurable fuzzy matching (e.g. context tolerance) similar to GNU `patch` fuzz factor.
- Add out-of-order hunk application guard rails and reporting when context shifts but still matches.

## Validation and diagnostics
- Surface structured warnings (not just errors) for ignored metadata lines.
- Provide human-readable diff summary after successful apply for logging/analytics.

## Tooling & API polish
- Publish API documentation and usage examples demonstrating custom filesystem adapters.
- Offer async variants of apply APIs for long-running operations.
- Add command-line wrapper target for easy manual testing.
